using System;
using System.Collections.Generic;
using NUnit.Framework;

namespace Tests
{
    public class Tests
    {
        [Test]
        public void Test_ph_hammingdistance()
        {
            UInt64[] hashes = { 0,
                         123456789,
                         987654321,
                         5526553564903890740UL,
                         5526553564903886772UL,
                         UInt64.MaxValue };
            const int hashes_length = 6;

            var results = new List<int>(15);
            for (int i = 0; i < hashes_length - 1; i++)
            {
                for (int j = i + 1; j < hashes_length; j++)
                {
                    var hash1 = hashes[i];
                    var hash2 = hashes[j];
                    var dist = PHash.DCT.HammingDistance(hash1, hash2);
                    results.Add(dist);
                }
            }

            var expected = new int[] { 16, 17, 32, 32, 64, 15, 26, 26, 48, 33, 31, 47, 2, 32, 32 };

            CollectionAssert.AreEqual(expected, results);
        }

        [Test]
        public void Test_ph_dct_imagehash()
        {
            var hash = PHash.DCT.GetImageHash("architecture_2.bmp");
            Assert.AreEqual(12354563954307271508UL, hash);
        }

        [Test]
        public void Test_ph_dct_matrix()
        {
            var expected = new float[] {
                0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,
                0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,0.250000f,
                0.351851f,0.338329f,0.311806f,0.273300f,0.224292f,0.166664f,0.102631f,0.034654f,
                -0.034654f,-0.102631f,-0.166664f,-0.224292f,-0.273300f,-0.311806f,-0.338329f,-0.351851f,
                0.346760f,0.293969f,0.196424f,0.068975f,-0.068975f,-0.196424f,-0.293969f,-0.346760f,
                -0.346760f,-0.293969f,-0.196424f,-0.068975f,0.068975f,0.196424f,0.293969f,0.346760f,
                0.338329f,0.224292f,0.034654f,-0.166664f,-0.311806f,-0.351851f,-0.273300f,-0.102631f,
                0.102631f,0.273300f,0.351851f,0.311806f,0.166664f,-0.034654f,-0.224292f,-0.338329f,
                0.326641f,0.135299f,-0.135299f,-0.326641f,-0.326641f,-0.135299f,0.135299f,0.326641f,
                0.326641f,0.135299f,-0.135299f,-0.326641f,-0.326641f,-0.135299f,0.135299f,0.326641f,
                0.311806f,0.034654f,-0.273300f,-0.338329f,-0.102631f,0.224292f,0.351851f,0.166664f,
                -0.166664f,-0.351851f,-0.224292f,0.102631f,0.338329f,0.273300f,-0.034654f,-0.311806f,
                0.293969f,-0.068975f,-0.346760f,-0.196424f,0.196424f,0.346760f,0.068975f,-0.293969f,
                -0.293969f,0.068975f,0.346760f,0.196424f,-0.196424f,-0.346760f,-0.068975f,0.293969f,
                0.273300f,-0.166664f,-0.338329f,0.034654f,0.351851f,0.102631f,-0.311806f,-0.224292f,
                0.224292f,0.311806f,-0.102631f,-0.351851f,-0.034654f,0.338329f,0.166664f,-0.273300f,
                0.250000f,-0.250000f,-0.250000f,0.250000f,0.250000f,-0.250000f,-0.250000f,0.250000f,
                0.250000f,-0.250000f,-0.250000f,0.250000f,0.250000f,-0.250000f,-0.250000f,0.250000f,
                0.224292f,-0.311806f,-0.102631f,0.351851f,-0.034654f,-0.338329f,0.166664f,0.273300f,
                -0.273300f,-0.166664f,0.338329f,0.034654f,-0.351851f,0.102631f,0.311806f,-0.224292f,
                0.196424f,-0.346760f,0.068975f,0.293969f,-0.293969f,-0.068975f,0.346760f,-0.196424f,
                -0.196424f,0.346760f,-0.068975f,-0.293969f,0.293969f,0.068975f,-0.346760f,0.196424f,
                0.166664f,-0.351851f,0.224292f,0.102631f,-0.338329f,0.273300f,0.034654f,-0.311806f,
                0.311806f,-0.034654f,-0.273300f,0.338329f,-0.102631f,-0.224292f,0.351851f,-0.166664f,
                0.135299f,-0.326641f,0.326641f,-0.135299f,-0.135299f,0.326641f,-0.326641f,0.135299f,
                0.135299f,-0.326641f,0.326641f,-0.135299f,-0.135299f,0.326641f,-0.326641f,0.135299f,
                0.102631f,-0.273300f,0.351851f,-0.311806f,0.166664f,0.034654f,-0.224292f,0.338329f,
                -0.338329f,0.224292f,-0.034654f,-0.166664f,0.311806f,-0.351851f,0.273300f,-0.102631f,
                0.068975f,-0.196424f,0.293969f,-0.346760f,0.346760f,-0.293969f,0.196424f,-0.068975f,
                -0.068975f,0.196424f,-0.293969f,0.346760f,-0.346760f,0.293969f,-0.196424f,0.068975f,
                0.034654f,-0.102631f,0.166664f,-0.224292f,0.273300f,-0.311806f,0.338329f,-0.351851f,
                0.351851f,-0.338329f,0.311806f,-0.273300f,0.224292f,-0.166664f,0.102631f,-0.034654f
            };

            var M = PHash.DCT.ph_dct_matrix(16);
            var indexer = M.GetGenericIndexer<float>();
            var pos = 0;
            for (int y = 0; y < M.Height; y++)
            {
                for (int x = 0; x < M.Width; x++)
                {
                    var color = indexer[y, x];
                    Assert.AreEqual(expected[pos], color, 0.00001);
                    pos++;
                }
            }
        }
    }
}